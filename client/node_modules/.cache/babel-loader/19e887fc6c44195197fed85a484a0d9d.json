{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\Repo\\\\Smart Contract Solidity\\\\TontinarCoin\\\\client\\\\src\\\\pages\\\\Home.js\";\nimport React, { useContext } from \"react\";\nimport { useKYC, useBuyToken } from \"../hooks/TokenHooks\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Container, Typography, Grid, Button } from \"@material-ui/core\";\nimport Web3Context from \"../Web3Context\";\nimport Link from \"@material-ui/core/Link\";\n\nconst Home = props => {\n  const _useContext = useContext(Web3Context),\n        contracts = _useContext.contracts,\n        totalSupply = _useContext.totalSupply,\n        balanceOf = _useContext.balanceOf;\n\n  const _useKYC = useKYC(),\n        kycResponse = _useKYC.response;\n\n  const _useBuyToken = useBuyToken(),\n        response = _useBuyToken.response,\n        buyToken = _useBuyToken.buyToken;\n\n  const handleBuyToken = async (tokenId, price) => {\n    await buyToken();\n\n    if (response !== null && response.error !== null) {\n      window.location.reload();\n    }\n  };\n\n  if (response == null || kycResponse == null || response.data == null || kycResponse.data == null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"loading\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"h5\",\n    variant: \"h2\",\n    align: \"center\",\n    color: \"textPrimary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Initial Coin Offering\"), React.createElement(Container, {\n    maxWidth: \"md\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"p\",\n    align: \"center\",\n    color: \"textPrimary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Our amazing Organization is the future of amazing organizations. With this initial coin offering we are giving you the opportunity to collaborate with an amazing team in order to find the final question. We already have the answer, 42 !!!\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Token information\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Total Supply of Tokens: \", totalSupply), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Total Available Tokens: \", balanceOf)), !!kycResponse && !!kycResponse.error && React.createElement(Alert, {\n    severity: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" \", kycResponse.error), kycResponse.data.isKycCompleted && React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Buy TontinarCoin TNAR\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Send Ether to this address: \", contracts.myTokenSale._address), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"You have: \", response.data.userTokens), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleBuyToken,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Buy token\")))), !kycResponse.data.isKycCompleted && React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Alert, {\n    severity: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Please complete your KYC in order to buy tokens.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Link, {\n    variant: \"button\",\n    color: \"textPrimary\",\n    href: \"/kyc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Complete your KYC\")))));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Workspace/Repo/Smart Contract Solidity/TontinarCoin/client/src/pages/Home.js"],"names":["React","useContext","useKYC","useBuyToken","Alert","Container","Typography","Grid","Button","Web3Context","Link","Home","props","contracts","totalSupply","balanceOf","kycResponse","response","buyToken","handleBuyToken","tokenId","price","error","window","location","reload","data","isKycCompleted","myTokenSale","_address","userTokens"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useKYC, useBuyToken } from \"../hooks/TokenHooks\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Container, Typography, Grid , Button} from \"@material-ui/core\";\nimport Web3Context from \"../Web3Context\";\nimport Link from \"@material-ui/core/Link\";\n\nconst Home = (props) => {\n  const { contracts, totalSupply, balanceOf } = useContext(Web3Context);\n  const { response: kycResponse } = useKYC();\n  const { response, buyToken } = useBuyToken();\n\n  const handleBuyToken = async (tokenId, price) => {\n    await buyToken();\n    if (response !== null && response.error !== null) {\n      window.location.reload();\n    }\n  };\n  if(response == null || kycResponse == null||  response.data == null || kycResponse.data == null){\n    return (<div>loading</div>)\n  }\n  return (\n    <div>\n      <section className=\"text-center\">\n        <Typography\n          component=\"h5\"\n          variant=\"h2\"\n          align=\"center\"\n          color=\"textPrimary\"\n        >\n          Initial Coin Offering\n        </Typography>\n        <Container maxWidth=\"md\">\n          <Typography component=\"p\" align=\"center\" color=\"textPrimary\">\n            Our amazing Organization is the future of amazing organizations.\n            With this initial coin offering we are giving you the opportunity to\n            collaborate with an amazing team in order to find the final\n            question. We already have the answer, 42 !!!\n          </Typography>\n        <div>\n          <h2>Token information</h2>\n     <p>Total Supply of Tokens: {totalSupply}</p>\n     <p>Total Available Tokens: {balanceOf}</p>\n     </div>\n          {!!kycResponse && !!kycResponse.error && (\n            <Alert severity=\"error\"> {kycResponse.error}</Alert>\n          )}\n          {kycResponse.data.isKycCompleted && (\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={3}\n            >\n              <Grid item xs={6}>\n                <div>\n                  <h2>Buy TontinarCoin TNAR</h2>\n                  <p>\n                    Send Ether to this address: {contracts.myTokenSale._address}\n                  </p>\n\n                  <p>You have: {response.data.userTokens}</p>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleBuyToken}>\n                  Buy token\n                </Button>\n\n                </div>\n              </Grid>\n            </Grid>\n          )}\n          {!kycResponse.data.isKycCompleted && (\n            <>\n              <p></p> <p></p> <p></p>\n              <Alert severity=\"info\">\n                Please complete your KYC in order to buy tokens.\n              </Alert>\n              <p></p> <p></p> <p></p>\n              <Link variant=\"button\" color=\"textPrimary\" href=\"/kyc\">\n                Complete your KYC\n              </Link>\n            </>\n          )}\n        </Container>\n      </section>\n    </div>\n  );\n};\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}